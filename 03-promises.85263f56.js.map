{"mappings":"YACAA,QAAUC,SAASC,cAAc,QACjCF,QAAQG,iBAAiB,UAIzB,SAAsBC,GACpBA,EAAIC,iBAyBN,SAAsBC,GACpB,I,IADsBC,EAAFD,EAAEE,MAAOC,EAATH,EAASG,KAAMC,EAAfJ,EAAeI,OAC1BC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC7BC,EAAcD,EAAI,EAAGJ,EAAQE,EAAOE,GACnCE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MACjBQ,GAAkB,EAClBC,QAAQC,IAAI,GAAkBC,OAAdJ,EAAU,KAA4BI,OAAxBT,EAAQ,iBAA0DS,OAAhCH,EAAgB,iBAAiCG,OAAPX,EAAO,O,IAElHY,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MAClBa,GAAiB,EACjBJ,QAAQC,IAAI,GAAkBC,OAAdJ,EAAU,KAA4BI,OAAxBT,EAAQ,iBAAyDS,OAA/BE,EAAe,iBAAuBF,OAAPX,EAAO,O,IAjC5Gc,EAGsBR,EAHMd,QAAQuB,SAGZf,EAAFM,EAAEN,MAAOC,EAATK,EAASL,KAAMC,EAAfI,EAAeJ,OAC9B,CAAEF,MAAOgB,OAAOhB,EAAMiB,OAAQhB,KAAMe,OAAOf,EAAKgB,OAAQf,OAAQc,OAAOd,EAAOe,UADvF,IAAwBX,EAAEN,EAAOC,EAAMC,C,IARvC,IAAIM,EAAiB,EACjBK,EAAgB,EAWpB,SAAST,EAAcG,EAAUP,GAC/B,IAAMkB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEf,WAAUP,UAGpBuB,EAAO,CAAEhB,WAAUP,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nformRef = document.querySelector('form');\nformRef.addEventListener('submit', onFormSubmit);\nlet resolvePromise = 0;\nlet rejectPromise = 0;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  totalPromise(getInputValues(formRef.elements));\n}\n\nfunction getInputValues({ delay, step, amount }) {\n  return { delay: Number(delay.value), step: Number(step.value), amount: Number(amount.value) };\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}     \n\n\nfunction totalPromise({ delay, step, amount }) {\n  for (let i = 0; i < amount; i += 1) {\n      createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        resolvePromise += 1;\n        console.log(`${ position }/${ amount }: ВЫПОЛНЕН №_${ resolvePromise } с задержкой ${ delay } ms`); \n      })\n      .catch(({ position, delay }) => {\n        rejectPromise += 1\n        console.log(`${ position }/${ amount }: ОТКЛОНЕН №_${ rejectPromise } с задержкой ${ delay } ms`); \n        \n      })\n  }\n}\n"],"names":["formRef","document","querySelector","addEventListener","evt","preventDefault","param1","delay1","delay","step","amount","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","$ce04d3a99e08e73b$var$resolvePromise","console","log","concat","catch","$ce04d3a99e08e73b$var$rejectPromise","$ce04d3a99e08e73b$var$totalPromise","elements","Number","value","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.85263f56.js.map"}